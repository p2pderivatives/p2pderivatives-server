syntax = "proto3";

package test;

import "method_option.proto";

option go_package = "p2pderivatives-server/test";

service Test {
    rpc TestNoToken(Empty) returns (Response) {
        option (pbbase.option_base).ignore_token_verify = true;
    }

    rpc TestWithToken (Empty) returns (Response) {}

    rpc TestRequestStreamNoToken(stream Empty) returns (Response) {
        option (pbbase.option_base).ignore_token_verify = true;
    }

    rpc TestRequestStreamWithToken(stream Empty) returns (Response) {}

    rpc TestResponseStreamNoToken(Empty) returns (stream Response) {
        option (pbbase.option_base).ignore_token_verify = true;
    }

    rpc TestResponseStreamWithToken(Empty) returns (stream Response) {}

    rpc TestBiDirectionalStreamNoToken(stream Empty) returns (stream Response) {
        option (pbbase.option_base).ignore_token_verify = true;
    }

    rpc TestBiDirectionalStreamWithToken(stream Empty) returns (stream Response) {}

    rpc TestDefaultTxOption(Empty) returns (Empty) {}

    rpc TestReadWriteTxOption(Empty) returns (Empty) {
        option (pbbase.option_base).tx_option = ReadWrite;
    }

    rpc TestReadOnlyTxOption(Empty) returns (Empty) {
        option (pbbase.option_base).tx_option = ReadOnly;
    }

    rpc TestNoTxOption(Empty) returns (Empty) {
        option (pbbase.option_base).tx_option = NoTx;
    }
}

message Empty {}

message Response {
    bool ok = 1;
}